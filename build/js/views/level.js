define(["lodash","backbone","js/views/base","game","js/models/LevelsPool","js/views/message","text!html/level.html","text!html/target.html","text!html/base.html"],function(e,t,n,a,i,r,o,s,l){function d(e){e.originalEvent.dataTransfer.setData("text/html",e.currentTarget.id)}function u(e){e.preventDefault(),e.currentTarget.classList.add("drag-over")}function c(e){e.preventDefault()}function g(e){e.preventDefault(),e.currentTarget.classList.remove("drag-over")}function h(t){var n,a=t.originalEvent.dataTransfer.getData("text/html"),i=document.getElementById(a);if(t.preventDefault(),t.currentTarget.classList.remove("drag-over"),e.has(t.currentTarget.dataset,"dropAreaBase")){if(t.currentTarget.dataset.linkedTargetId)return;t.currentTarget.dataset.linkedTargetId=a,t.currentTarget.classList.add("occupied")}n=$(i).closest("[data-drop-area-base]")[0],n&&(n.dataset.linkedTargetId="",n.classList.remove("occupied")),t.currentTarget.appendChild(i)}var p;return p=n.extend({template:e.template(o),targetTemplate:e.template(s),basisTemplate:e.template(l),tagName:"div",name:"level",events:{"click .check-solution":"onCheckSolutionClick","click .level-num.button":"onLevelNumClick","click .reset.button":"onResetClick","click .logo.button":"onLogoClick"},initialize:function(t){n.prototype.initialize.apply(this,arguments),this.levelIndex=e.isNumber(t)?t:parseInt(t)},prepareData:function(){var e=this;return a.db.getLevel(this.levelIndex).then(function(t){e.model=t})},getTemplateData:function(){var t=n.prototype.getTemplateData.apply(this,arguments);return e.assign(t,{renderTargetItem:this.targetTemplate,renderBasisItem:this.basisTemplate}),t},show:function(){$.when(n.prototype.show.apply(this,arguments)).then(e.bind(this.initDragAreas,this)).then(e.bind(this.initDropAreas,this))},reset:function(){this.$el.find(".base .occupied").removeClass("occupied").attr("data-linked-target-id","").find(".target").appendTo(this.$el.find(".targets").get(0))},remove:function(){i.put(this.model),n.prototype.remove.apply(this,arguments)},onCheckSolutionClick:function(){var e=[];this.validatelevel(this.getLevelSolution())?(e.push(a.updateActiveLevel(this.levelIndex)),e.push(this.showWinMessage()),$.when.apply($,e).then(function(e){return a.navigateToLevel(e)})):this.showFailMessage()},showWinMessage:function(){var e=new $.Deferred;return(new r).show({templateData:{header:"Co-o-o-ol!",body:"Good job! Let's go futher! But be ready - it'll be not so easy!",buttons:[{text:"Next level"}]},postRender:function(t){t.$el.find(".button").click(function(){t.hide(),e.resolve()})}}),e},showFailMessage:function(){(new r).show({templateData:{header:"O-o-o-p-psss!",body:"Something is wrong. Try again, try to think deeper...",buttons:[{text:"Try again"}]},postRender:function(t){t.$el.find(".button").click(e.bind(t.hide,t))}})},onLevelNumClick:function(){a.router.navigate("levels",{trigger:!0})},onResetClick:function(){this.reset()},onLogoClick:function(){a.router.navigate("welcome",{trigger:!0})},initDropAreas:function(){this.$el.find(".drop-area").on("dragenter",u).on("dragover",c).on("dragleave",g).on("drop",h)},initDragAreas:function(){this.$el.find(".drag-area").on("dragstart",d)},getLevelSolution:function(){var e={};return this.$el.find(".base").each(function(t,n){var a=n.getElementsByClassName("drop-area")[0];a&&(e[n.id]=a.dataset.linkedTargetId||"")}),e},validatelevel:function(e){return this.model.checkSolution(e)}})});